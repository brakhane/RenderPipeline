{"name":"Panda3D Render Pipeline","tagline":"Complete deferred render pipeline for Panda3D","body":"Deferred Render Pipeline\r\n==============\r\n\r\nComplete deferred render pipeline for panda3d (Work in progress)\r\n\r\n### Features:\r\n\r\n##### Deferred rendering (obviously)\r\n- Still allows some objects to have forward passes\r\n\r\n##### Early-Z\r\n- Pre-Renders depth to avoid overdraw\r\n\r\n##### SSDO\r\n- with one bounce for indirect lighting / color bleeding\r\n\r\n##### PSSM, Cloud Shadows, Large Terrain Shadows\r\n- ~~complete lighting and shadows via compute shader~~\r\n    - Too slow, replaced by regular fragment shaders\r\n\r\n##### Atmospheric Scattering & Volumetric Fog\r\n\r\n##### Multi-Hemisphere-Skybox\r\n\r\n##### Lighting:\r\n- Point Lights\r\n    - Either shadow casting or not\r\n    - When shadow casting, only use 2 perspectives\r\n        - Parabolic mapping\r\n\r\n- Directional Lights\r\n    - Sun only\r\n    - PSSM Shadows\r\n\r\n- Ambient Lights\r\n    - Darken or Bright\r\n        - Artist controlled Global Illumination\r\n\r\n- Projector Lights\r\n    - Either shadow casting or not\r\n    - Only 1 perspective\r\n    - Projection texture\r\n        - Can be used for flashlights for example\r\n\r\n- Area Lights\r\n    - Caster is a rectangle\r\n        - Orthographic Lens\r\n    - Also supports projection texture\r\n    - Maybe Cone-Mapping\r\n\r\n##### Physically based shading / lighting\r\n\r\n##### Precomputed HDR environment probes\r\n- Only in areas where reflective materials are used\r\n    - and SSLR does not work well for the material\r\n        - like water patches\r\n- Image based lighting\r\n\r\n##### Dynamic reflections\r\n- Screen Space Local Reflections\r\n- For specular materials\r\n- Cheapest solution for reflections\r\n\r\n##### Dynamic cubemaps \r\n- rare usage, because of performance\r\n- Render only 2 perspectives, parabolic mapping\r\n- Not updated every frame\r\n\r\n##### Tone mapping (HDR)\r\n\r\n##### Blur\r\n- Focal Blur\r\n- Movement Blur (edges)\r\n- Mipmap based + in place 4x4 kernel\r\n    - Varying radius (DOF)\r\n\r\n##### Tesselation Shader\r\n- Based on displacement map, or detail normals\r\n- Height stored in z component of normalmap\r\n\r\n##### Bokeh DOF\r\n- In combination with blur\r\n\r\n##### Approximated Chromatic Aberration\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}